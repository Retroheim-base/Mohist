--- a/net/minecraft/data/CommandsReport.java
+++ b/net/minecraft/data/CommandsReport.java
@@ -2,24 +2,7 @@
 
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
-import com.mojang.authlib.GameProfileRepository;
-import com.mojang.authlib.minecraft.MinecraftSessionService;
-import com.mojang.authlib.yggdrasil.YggdrasilAuthenticationService;
-import com.mojang.brigadier.CommandDispatcher;
-import java.io.File;
 import java.io.IOException;
-import java.net.Proxy;
-import java.nio.file.Path;
-import java.nio.file.Paths;
-import java.util.UUID;
-import net.minecraft.command.CommandSource;
-import net.minecraft.command.arguments.ArgumentTypes;
-import net.minecraft.server.MinecraftServer;
-import net.minecraft.server.ServerPropertiesProvider;
-import net.minecraft.server.dedicated.DedicatedServer;
-import net.minecraft.server.management.PlayerProfileCache;
-import net.minecraft.util.datafix.DataFixesManager;
-import net.minecraft.world.chunk.listener.LoggingChunkStatusListener;
 
 public class CommandsReport implements IDataProvider {
    private static final Gson field_218430_b = (new GsonBuilder()).setPrettyPrinting().disableHtmlEscaping().create();
@@ -30,16 +13,19 @@
    }
 
    public void func_200398_a(DirectoryCache p_200398_1_) throws IOException {
-      YggdrasilAuthenticationService yggdrasilauthenticationservice = new YggdrasilAuthenticationService(Proxy.NO_PROXY, UUID.randomUUID().toString());
+
+      /*YggdrasilAuthenticationService yggdrasilauthenticationservice = new YggdrasilAuthenticationService(Proxy.NO_PROXY, UUID.randomUUID().toString());
       MinecraftSessionService minecraftsessionservice = yggdrasilauthenticationservice.createMinecraftSessionService();
       GameProfileRepository gameprofilerepository = yggdrasilauthenticationservice.createProfileRepository();
-      File file1 = new File(this.field_200400_a.func_200391_b().toFile(), "tmp");
-      PlayerProfileCache playerprofilecache = new PlayerProfileCache(gameprofilerepository, new File(file1, MinecraftServer.field_152367_a.getName()));
+      File file1 = new File(this.generator.getOutputFolder().toFile(), "tmp");
+      PlayerProfileCache playerprofilecache = new PlayerProfileCache(gameprofilerepository, new File(file1, MinecraftServer.USER_CACHE_FILE.getName()));
       ServerPropertiesProvider serverpropertiesprovider = new ServerPropertiesProvider(Paths.get("server.properties"));
-      MinecraftServer minecraftserver = new DedicatedServer(file1, serverpropertiesprovider, DataFixesManager.func_210901_a(), yggdrasilauthenticationservice, minecraftsessionservice, gameprofilerepository, playerprofilecache, LoggingChunkStatusListener::new, serverpropertiesprovider.func_219034_a().field_219021_o);
-      Path path = this.field_200400_a.func_200391_b().resolve("reports/commands.json");
-      CommandDispatcher<CommandSource> commanddispatcher = minecraftserver.func_195571_aL().func_197054_a();
-      IDataProvider.func_218426_a(field_218430_b, p_200398_1_, ArgumentTypes.func_200388_a(commanddispatcher, commanddispatcher.getRoot()), path);
+      MinecraftServer minecraftserver = new DedicatedServer(file1, serverpropertiesprovider, DataFixesManager.getDataFixer(), yggdrasilauthenticationservice, minecraftsessionservice, gameprofilerepository, playerprofilecache, LoggingChunkStatusListener::new, serverpropertiesprovider.getProperties().worldName);
+      Path path = this.generator.getOutputFolder().resolve("reports/commands.json");
+      CommandDispatcher<CommandSource> commanddispatcher = minecraftserver.getCommandManager().getDispatcher();
+      IDataProvider.save(GSON, cache, ArgumentTypes.serialize(commanddispatcher, commanddispatcher.getRoot()), path);
+
+       */
    }
 
    public String func_200397_b() {
